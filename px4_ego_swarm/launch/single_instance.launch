<?xml version="1.0"?>
<launch>
    <!-- size of map, change the size inflate x, y, z according to your application -->
    <arg name="map_size_x" default="50.0"/>
    <arg name="map_size_y" default="50.0"/>
    <arg name="map_size_z" default="10.0"/>
    <arg name="init_x" default="0.0"/>
    <arg name="init_y" default="0.0"/>
    <arg name="init_z" default="0.0"/>
    <arg name="target_x" default="0.0"/>
    <arg name="target_y" default="0.0"/>
    <arg name="target_z" default="0.0"/>

    <arg name="drone_id" default="0"/>

    <!-- topic of your odometry such as VIO or LIO -->
    <arg name="odometry_topic" default="/uvify0/mavros/local_position/odom"/>
    <arg name="camera_pose_topic" default="/uvify0/camera/pose"/>
    <arg name="depth_topic" default="/uvify0/camera/depth/image_raw"/>
    <arg name="cloud_topic" default="/uvify0/camera/depth/color/points"/>

    <arg name="cx" default="321.04638671875"/>
    <arg name="cy" default="243.44969177246094"/>
    <arg name="fx" default="387.229248046875"/>
    <arg name="fy" default="387.229248046875"/>

    <arg name="max_vel" default="2.0"/>
    <arg name="max_acc" default="3.0"/>
    <arg name="planning_horizon" default="7.5"/>

    <arg name="point_num" default="0"/>
    <arg name="point0_x" default="-1.0"/>
    <arg name="point0_y" default="-1.0"/>
    <arg name="point0_z" default="-1.0"/>

    <arg name="flight_type" default="1"/> <!-- 1: use 2D Nav Goal to select goal  2: use global waypoints -->
    <arg name="use_distinctive_trajs" default="true"/>

    <arg name="obj_num_set" default="0"/>

    <!-- main node -->
    <![CDATA[
    <node pkg="ego_planner" name="drone_$(arg drone_id)_ego_planner_node" type="ego_planner_node" output="screen">

    <remap from="~odom_world" to="/drone_$(arg drone_id)_$(arg odometry_topic)"/>
    <remap from="~planning/bspline" to = "/drone_$(arg drone_id)_planning/bspline"/>
    <remap from="~planning/data_display" to = "/drone_$(arg drone_id)_planning/data_display"/>
    <remap from="~planning/broadcast_bspline_from_planner" to = "/broadcast_bspline"/>
    <remap from="~planning/broadcast_bspline_to_planner" to = "/broadcast_bspline"/>

    <remap from="~grid_map/odom" to="/drone_$(arg drone_id)_$(arg odometry_topic)"/>
    <remap from="~grid_map/cloud" to="/drone_$(arg drone_id)_$(arg cloud_topic)"/>
    <remap from="~grid_map/pose"   to = "/drone_$(arg drone_id)_$(arg camera_pose_topic)"/> 
    <remap from="~grid_map/depth" to = "/drone_$(arg drone_id)_$(arg depth_topic)"/>

    <!-- planning fsm if we have waypoints -->
    <param name="fsm/flight_type" value="$(arg flight_type)" type="int"/>
    <param name="fsm/thresh_replan_time" value="1.0" type="double"/>
    <param name="fsm/thresh_no_replan_meter" value="1.0" type="double"/>
    <param name="fsm/planning_horizon" value="$(arg planning_horizon)" type="double"/> <!--always set to 1.5 times grater than sensing horizen-->
    <param name="fsm/planning_horizen_time" value="3" type="double"/>
    <param name="fsm/emergency_time" value="1.0" type="double"/>
    <param name="fsm/realworld_experiment" value="false"/>
    <param name="fsm/fail_safe" value="true"/>

    <param name="fsm/waypoint_num" value="$(arg point_num)" type="int"/>
    <!-- <param name="fsm/waypoint0_x" value="$(arg point0_x)" type="double"/>
    <param name="fsm/waypoint0_y" value="$(arg point0_y)" type="double"/>
    <param name="fsm/waypoint0_z" value="$(arg point0_z)" type="double"/> -->

    <param name="grid_map/resolution"      value="0.1" /> 
    <param name="grid_map/map_size_x"   value="$(arg map_size_x_)" /> 
    <param name="grid_map/map_size_y"   value="$(arg map_size_y_)" /> 
    <param name="grid_map/map_size_z"   value="$(arg map_size_z_)" /> 
    <param name="grid_map/local_update_range_x"  value="5.5" /> 
    <param name="grid_map/local_update_range_y"  value="5.5" /> 
    <param name="grid_map/local_update_range_z"  value="4.5" /> 
    <param name="grid_map/obstacles_inflation"     value="0.099" /> 
    <param name="grid_map/local_map_margin" value="10"/>
    <param name="grid_map/ground_height"        value="-0.01"/>
    <!-- camera parameter -->
    <param name="grid_map/cx" value="$(arg cx)"/>
    <param name="grid_map/cy" value="$(arg cy)"/>
    <param name="grid_map/fx" value="$(arg fx)"/>
    <param name="grid_map/fy" value="$(arg fy)"/>
    <!-- depth filter -->
    <param name="grid_map/use_depth_filter" value="true"/>
    <param name="grid_map/depth_filter_tolerance" value="0.15"/>
    <param name="grid_map/depth_filter_maxdist"   value="5.0"/>
    <param name="grid_map/depth_filter_mindist"   value="0.2"/>
    <param name="grid_map/depth_filter_margin"    value="2"/>
    <param name="grid_map/k_depth_scaling_factor" value="1000.0"/>
    <param name="grid_map/skip_pixel" value="2"/>
    <!-- local fusion -->
    <param name="grid_map/p_hit"  value="0.65"/>
    <param name="grid_map/p_miss" value="0.35"/>
    <param name="grid_map/p_min"  value="0.12"/>
    <param name="grid_map/p_max"  value="0.90"/>
    <param name="grid_map/p_occ"  value="0.80"/>
    <param name="grid_map/min_ray_length" value="0.1"/>
    <param name="grid_map/max_ray_length" value="4.5"/>

    <param name="grid_map/virtual_ceil_height"   value="2.9"/>
    <param name="grid_map/visualization_truncate_height"   value="1.8"/>
    <param name="grid_map/show_occ_time"  value="false"/>
    <param name="grid_map/pose_type"     value="1"/>  
    <param name="grid_map/frame_id"      value="world"/>

    <!-- planner manager -->
    <param name="manager/max_vel" value="$(arg max_vel)" type="double"/>
    <param name="manager/max_acc" value="$(arg max_acc)" type="double"/>
    <param name="manager/max_jerk" value="4" type="double"/>
    <param name="manager/control_points_distance" value="0.4" type="double"/>
    <param name="manager/feasibility_tolerance" value="0.05" type="double"/>
    <param name="manager/planning_horizon" value="$(arg planning_horizon)" type="double"/>
    <param name="manager/use_distinctive_trajs" value="$(arg use_distinctive_trajs)" type="bool"/>
    <param name="manager/drone_id" value="$(arg drone_id)"/>

    <!-- trajectory optimization -->
    <param name="optimization/lambda_smooth" value="1.0" type="double"/>
    <param name="optimization/lambda_collision" value="0.5" type="double"/>
    <param name="optimization/lambda_feasibility" value="0.1" type="double"/>
    <param name="optimization/lambda_fitness" value="1.0" type="double"/>
    <param name="optimization/dist0" value="0.5" type="double"/>
    <param name="optimization/swarm_clearance" value="0.5" type="double"/>
    <param name="optimization/max_vel" value="$(arg max_vel)" type="double"/>
    <param name="optimization/max_acc" value="$(arg max_acc)" type="double"/>

    <param name="bspline/limit_vel" value="$(arg max_vel)" type="double"/>
    <param name="bspline/limit_acc" value="$(arg max_acc)" type="double"/>
    <param name="bspline/limit_ratio" value="1.1" type="double"/>

    <!-- objects prediction -->
    <param name="prediction/obj_num" value="$(arg obj_num_set)" type="int"/>
    <param name="prediction/lambda" value="1.0" type="double"/>
    <param name="prediction/predict_rate" value="1.0" type="double"/>

    </node>
    ]]>

    <!-- main algorithm params -->
    <include file="$(find px4_ego_swarm)/launch/advanced_param.xml">

        <arg name="drone_id" value="$(arg drone_id)"/>

        <arg name="map_size_x_" value="$(arg map_size_x)"/>
        <arg name="map_size_y_" value="$(arg map_size_y)"/>
        <arg name="map_size_z_" value="$(arg map_size_z)"/>
        <arg name="odometry_topic" value="$(arg odometry_topic)"/>

        <arg name="obj_num_set" value="$(arg obj_num_set)" />

        <!-- camera pose: transform of camera frame in the world frame -->
        <!-- depth topic: depth image, 640x480 by default -->
        <!-- don't set cloud_topic if you already set these ones! -->
        <arg name="camera_pose_topic" value="$(arg camera_pose_topic)"/>
        <arg name="depth_topic" value="$(arg depth_topic)"/>

        <!-- topic of point cloud measurement, such as from LIDAR  -->
        <!-- don't set camera pose and depth, if you already set this one! -->
        <arg name="cloud_topic" value="$(arg cloud_topic)"/>

        <!-- intrinsic params of the depth camera -->
        <arg name="cx" value="$(arg cx)"/>
        <arg name="cy" value="$(arg cy)"/>
        <arg name="fx" value="$(arg fx)"/>
        <arg name="fy" value="$(arg fy)"/>

        <!-- maximum velocity and acceleration the drone will reach -->
        <arg name="max_vel" value="$(arg max_vel)"/>
        <arg name="max_acc" value="$(arg max_acc)"/>

        <!--always set to 1.5 times grater than sensing horizen-->
        <arg name="planning_horizon" value="$(arg planning_horizon)"/>

        <arg name="use_distinctive_trajs" value="$(arg use_distinctive_trajs)"/>

        <!-- 1: use 2D Nav Goal to select goal  -->
        <!-- 2: use global waypoints below  -->
        <arg name="flight_type" value="$(arg flight_type)"/>

        <!-- global waypoints -->
        <!-- It generates a piecewise min-snap traj passing all waypoints -->
        <arg name="point_num" value="$(arg point_num)"/>

    </include>

    <!-- Geometric controller -->
    <include file="$(find px4_fast_planner)/launch/geometric_controller.launch">
        <arg name="gazebo_simulation" value="$(arg use_gazebo)" />
        <arg name="max_acc" value="$(arg max_acc)" />
        <param name="Kp_x" value="6.0" />
        <param name="Kp_y" value="6.0" />
        <param name="Kp_z" value="10.0" />
        <param name="Kv_x" value="1.5" />
        <param name="Kv_y" value="1.5" />
        <param name="Kv_z" value="3.5" />
        <arg name="init_pos_x" value="0.0" />
        <arg name="init_pos_y" value="0.0" />
        <arg name="init_pos_z" value="$(arg takeoff_height)" />
    </include>

    <!-- trajectory server -->
    <node pkg="ego_planner" name="drone_$(arg drone_id)_traj_server" type="traj_server" output="screen">
        <remap from="position_cmd" to="drone_$(arg drone_id)_planning/pos_cmd"/>
        <remap from="~planning/bspline" to="drone_$(arg drone_id)_planning/bspline"/>

        <param name="traj_server/time_forward" value="1.0" type="double"/>
    </node>

    <!-- use simulator -->
    <include file="$(find px4_ego_swarm)/launch/simulator.xml">

        <arg name="drone_id" value="$(arg drone_id)"/>

        <arg name="map_size_x_" value="$(arg map_size_x)"/>
        <arg name="map_size_y_" value="$(arg map_size_y)"/>
        <arg name="map_size_z_" value="$(arg map_size_z)"/>

        <arg name="init_x_" value="$(arg init_x)"/>
        <arg name="init_y_" value="$(arg init_y)"/>
        <arg name="init_z_" value="$(arg init_z)"/>

        <arg name="odometry_topic" value="$(arg odometry_topic)"/>
    </include>

</launch>
